{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,iBAAkBF,SAASC,cAAc,uBACzCE,gBAAiBH,SAASC,cAAc,sBACxCG,aAAcJ,SAASC,cAAc,yBAKvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbT,EAAKC,OAAOe,iBAAiB,UAe7B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAkBC,OAAOpB,EAAKI,iBAAiBiB,OAC/CC,EAAiBF,OAAOpB,EAAKK,gBAAgBgB,OAC7CE,EAAcH,OAAOpB,EAAKM,aAAae,OAE3C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EACpCjB,EAAciB,EAAI,EAAGA,EAAIF,EAAiBH,GACvCM,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAU,IAGnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,IAIrDQ,EAAIc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  firstDelayInptEl: document.querySelector('input[name=\"delay\"]'),\n  delayStepInptEl: document.querySelector('input[name=\"step\"]'),\n  amountInptEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let firstDelayValue = Number(refs.firstDelayInptEl.value);\n  let delayStepValue = Number(refs.delayStepInptEl.value);\n  let amountValue = Number(refs.amountInptEl.value);\n\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, i * delayStepValue + firstDelayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.target.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","firstDelayInptEl","delayStepInptEl","amountInptEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","firstDelayValue","Number","value","delayStepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.b3e97409.js.map"}